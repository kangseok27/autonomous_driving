<launch>
        <!-- Console launch prefix -->
        <arg name="launch_prefix" default=""/>

        <!-- Config and weights folder. -->
        <arg name="yolo_weights_path"          default="$(find darknet_ros)/yolo_network_config/weights"/>
        <arg name="yolo_config_path"           default="$(find darknet_ros)/yolo_network_config/cfg"/>

        <!-- ROS and network parameter files -->
        <arg name="ros_param_file"             default="$(find darknet_ros)/config/ros.yaml"/>
        <arg name="network_param_file"         default="$(find darknet_ros)/config/yolov2-tiny.yaml"/>
        <!--<arg name="network_param_file"         default="$(find darknet_ros)/config/yolov3.yaml"/>-->
        <!--<arg name="network_param_file"         default="$(find darknet_ros)/config/yolov2.yaml"/>-->
        <!--<arg name="network_param_file"         default="$(find darknet_ros)/config/yolov3-tiny.yaml"/>-->

        <!-- Load parameters -->
        <rosparam command="load" ns="darknet_ros" file="$(arg ros_param_file)"/>
        <rosparam command="load" ns="darknet_ros" file="$(arg network_param_file)"/>

        <!-- Start darknet and ros wrapper -->
        <node pkg="darknet_ros" type="darknet_ros" name="darknet_ros" output="screen" launch-prefix="$(arg launch_prefix)">
                <param name="weights_path"          value="$(arg yolo_weights_path)" />
                <param name="config_path"           value="$(arg yolo_config_path)" />
        </node>



        <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
                <param name="video_device" value="/dev/video1" />
                <param name="image_width" value="640" />
                <param name="image_height" value="480" />
                <param name="pixel_format" value="yuyv" />
                <param name="camera_name" value="usb_cam" />
                <param name="camera_frame_id" value="usb_cam" />
                <param name="camera_info_url" value="file://$(find ar_tag)/calibration/usb_cam_78.yaml" />
                <param name="io_method" value="mmap"/>
        </node>

        <!--<node name="republish" type="republish" pkg="image_transport" output="screen" args="compressed in:=/usb_cam/image_raw raw out:=/camera/image_raw" /> -->

        <!--<node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
                <remap from="image" to="/usb_cam/image_raw"/>
                <param name="autosize" value="true" />
        </node>-->

        <arg name="marker_size" default="9.0" />
        <arg name="max_new_marker_error" default="0.05" />
        <arg name="max_track_error" default="0.05" />
        <arg name="cam_image_topic" default="/camera/image_raw" />
        <arg name="cam_info_topic" default="/camera/camera_info" />
        <arg name="output_frame" default="usb_cam" />

        <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
                <param name="marker_size"                type="double" value="$(arg marker_size)" />
                <param name="max_new_marker_error"       type="double" value="$(arg max_new_marker_error)" />
                <param name="max_track_error"            type="double" value="$(arg max_track_error)" />
                <param name="output_frame"               type="string" value="$(arg output_frame)" />
                <remap from="camera_image" to="$(arg cam_image_topic)"/>
                <remap from="camera_info" to="$(arg cam_info_topic)"/>
        </node>

        <arg name="multi_robot_name" default=""/>
        <arg name="set_lidar_frame_id" default="base_scan"/>

        <include file="$(find turtlebot3_bringup)/launch/turtlebot3_core.launch">
                arg name="multi_robot_name" value="$(arg multi_robot_name)"/>
        </include>
        <include file="$(find turtlebot3_bringup)/launch/turtlebot3_lidar.launch">
                <arg name="set_frame_id" value="$(arg set_lidar_frame_id)"/>
        </include>

        <node pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="turtlebot3_diagnostics" output="screen"/>
</launch>
